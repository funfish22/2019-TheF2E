{"version":3,"sources":["stories/atoms/Navbar/Navbar.js","stories/atoms/Navbar/index.js","stories/atoms/Title/Title.js","stories/atoms/Title/index.js","stories/atoms/Radio/Radio.js","stories/atoms/Radio/index.js","stories/organisms/Card/Card.js","stories/organisms/Card/index.js","stories/atoms/Button/Button.js","stories/atoms/Button/index.js","stories/atoms/List/List.js","stories/atoms/List/index.js","page/Home/Form.js","page/Home/index.js","page/Home/Home.js","App.js","serviceWorker.js","index.js"],"names":["Navbar","Header","Logo","href","styled","header","a","Title","this","props","style","className","children","TitleRoot","React","h2","Radio","isCurrent","RadioRoot","defaultProps","div","css","Card","source","onChange","img","yourRadio","map","row","index","parseFloat","id","CardRoot","key","CardLabel","CardInput","type","name","value","CardImg","src","alt","CardText","title","CardContent","content","undefined","li","label","input","p","themeConfig","default","bgColor","fontColor","borderColor","primary","Button","theme","buttonProps","themeProps","ButtonRoot","config","button","List","state","ListContent","ListRoot","ReactHtmlParser","ul","CartArray","Form","handleRadio","e","setState","target","onSubmit","form","validateFields","error","console","log","getFieldDecorator","getFieldValue","setFieldsValue","Main","action","maxWidth","width","CardContainer","validateFirst","rules","required","ListContainer","ListBlack","ListImg","ButtonContainer","onClick","PureComponent","createForm","Home","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"+mBAYeA,MARf,WACI,OACI,gBAACC,EAAD,KACI,gBAACC,EAAD,CAAMC,KAAK,OAAX,kBAONF,EAASG,IAAOC,OAAV,KAINH,EAAOE,IAAOE,EAAV,KChBKN,I,6LCmBAO,E,iLATD,IAAD,EACgCC,KAAKC,MAAnCC,EADF,EACEA,MAAOC,EADT,EACSA,UAAWC,EADpB,EACoBA,SAEzB,OACI,gBAACC,EAAD,CAAWH,MAAOA,EAAOC,UAAWA,GAAYC,O,GALxCE,iBAYdD,EAAYT,IAAOW,GAAV,KCrBAR,I,8hBCOTS,E,iLAKQ,IACCC,EAAaT,KAAKC,MAAlBQ,UAEP,OACI,gBAACC,EAAD,CAAWD,UAAWA,Q,GATdH,iBAAdE,EACKG,aAAe,CAClBF,WAAW,GAYJD,QAETE,EAAYd,IAAOgB,IAAV,KAID,SAAAX,GAAK,OAAIA,EAAMQ,UAAY,oBAAsB,uBAIzD,SAAAR,GAAK,OAAIA,EAAMQ,WAAaI,YAAnB,QC/BAL,I,u8BCIf,IAoBMM,E,iLAOQ,IAAD,EACiDd,KAAKC,MAApDc,EADF,EACEA,OAAaC,GADf,EACUC,IADV,EACeD,UAAUE,EADzB,EACyBA,UAAWf,EADpC,EACoCA,UACzC,OACI,gCACKY,EAAOI,KAAI,SAACC,EAAKC,GACd,IAAMZ,EAAYa,WAAWJ,KAAeI,WAAWF,EAAIG,IAC3D,OACI,gBAACC,EAAD,CAAUC,IAAKL,EAAIG,GAAIpB,UAAWA,GAC9B,gBAACuB,EAAD,CAAWjB,UAAWA,GAClB,gBAACkB,EAAD,CAAWC,KAAK,QAAQC,KAAK,OAAOC,MAAOV,EAAIG,GAAIP,SAAUA,IAC7D,gBAAC,EAAD,CAAOP,UAAWA,IAClB,gBAACsB,EAAD,KACI,uBAAKC,IAAKZ,EAAIH,IAAKgB,IAAI,MAE3B,gBAACC,EAAD,KACI,gBAAC,EAAD,KAAQd,EAAIe,OACZ,gBAACC,EAAD,KAAchB,EAAIiB,oB,GAvBnC/B,aAAbQ,EACKH,aAAe,CAClBI,OAtBU,CACd,CACIQ,GAAI,EACJN,IAAK,4BACLkB,MAAO,wCACPE,QAAS,2CAkBT5B,WAAW,EACXN,eAAWmC,GA8BJxB,QAETU,EAAW5B,IAAO2C,GAAV,KAQRb,EAAY9B,IAAO4C,MAAV,KAMD,SAAAvC,GAAK,OAAIA,EAAMQ,UAAY,oBAAuB,uBAG1D,SAAAR,GAAK,OAAIA,EAAMQ,WAAaI,YAAnB,QAKTc,EAAY/B,IAAO6C,MAAV,KAITL,EAAcxC,IAAO8C,EAAV,KAKXX,EAAUnC,IAAOgB,IAAV,KAKPsB,EAAWtC,IAAOgB,IAAV,KChGCE,I,+9BCWf,IAAM6B,EAAc,CAChBC,QAAS,CACLC,QAAS,cACTC,UAAW,UACXC,YAAa,WAEjBC,QAAS,CACLH,QAAS,UACTC,UAAW,UACXC,YAAa,YAIfE,E,iLAMQ,IAAD,EACuDjD,KAAKC,MAA1DC,EADF,EACEA,MAAOC,EADT,EACSA,UAAWC,EADpB,EACoBA,SAAU8C,EAD9B,EAC8BA,MAAUC,EADxC,wDAGCC,EAAaF,EAAQP,EAAYO,GAAS,GAEhD,OACI,gBAACG,GAAD,iBAAgBF,EAAhB,CAA6BjD,MAAOA,EAAOC,UAAWA,EAAWmD,OAAM,KAAMF,KAAchD,O,GAZlFE,iBAAf2C,EACKtC,aAAe,CAClBuC,MAAO,UACPtB,KAAM,UAcCqB,SAETI,GAAazD,IAAO2D,OAAV,KACQ,SAAAtD,GAAK,OAAIA,EAAMqD,OAAOP,aAAe9C,EAAMqD,OAAOP,eAIlD,SAAA9C,GAAK,OAAIA,EAAMqD,OAAOT,SAAW5C,EAAMqD,OAAOT,WACzD,SAAA5C,GAAK,OAAIA,EAAMqD,OAAOR,WAAa7C,EAAMqD,OAAOR,aCjD9CG,M,qOCSf,SAASO,GAAKvD,EAAcwD,GAAe,IAChCC,EAA0BzD,EAA1ByD,YAAavD,EAAaF,EAAbE,UACpB,OACI,gBAACwD,GAAD,CAAUxD,UAAWA,GAChByD,KAAgBF,IAK7BF,GAAK7C,aAAe,CAChB+C,iBAAapB,EACbnC,eAAWmC,GAGAkB,UAETG,GAAW/D,IAAOiE,GAAV,MCzBCL,M,suBCKf,IAAMM,GAAY,CACd,CACIvC,GAAI,EACJN,IAAK,4BACLkB,MAAO,wCACPE,QAAS,0CAEb,CACId,GAAI,EACJN,IAAK,2BACLkB,MAAO,kCACPE,QAAS,qDAEb,CACId,GAAI,EACJN,IAAK,0BACLkB,MAAO,wBACPE,QAAS,kDAEb,CACId,GAAI,EACJN,IAAK,0BACLkB,MAAO,kCACPE,QAAS,oMAEb,CACId,GAAI,EACJN,IAAK,0BACLkB,MAAO,uBACPE,QAAS,wDAmBX0B,G,2MACFN,MAAQ,CACJvC,UAAW,I,EAGf8C,YAAc,SAACC,GACX,EAAKC,SAAS,CACVhD,UAAW+C,EAAEE,OAAOrC,S,EAI5BsC,SAAW,SAACH,GAER,EAAKhE,MAAMoE,KAAKC,gBAAe,SAACC,EAAOzC,GACvC0C,QAAQC,IAAIF,EAAOzC,O,wEAIb,IAAD,EAGG9B,KAAKC,MADToE,KAAOK,EAFN,EAEMA,kBAGJxD,GALF,EAEyByD,cAFzB,EAEwCC,eAGzB5E,KAAKyD,MAAlBvC,WACP,OACI,kBAAC2D,GAAD,CAAMC,OAAO,GAAG5E,MAAO,CAAC6E,SAAU,QAASC,MAAO,QAC9C,kBAACC,GAAD,KACKP,EAAkB,gBAAiB,CAC5BQ,eAAe,EACfC,MAAO,CAAC,CACJC,UAAU,KAHrBV,CAMO,kBAAC,EAAD,CAAM3D,OAAQ+C,GAAW9C,SAAUhB,KAAKgE,YAAa9C,UAAWA,MAG5E,kBAACmE,GAAD,KACI,kBAACC,GAAD,CAAW5B,YApDd,i2CAqDG,kBAAC6B,GAAD,CAASvD,IAAI,6BAA6BC,IAAI,MAElD,kBAACuD,GAAD,KACI,kBAAC,GAAD,2BACA,kBAAC,GAAD,CAAQtC,MAAM,UAAUtB,KAAK,QAAQ6D,QAASzF,KAAKoE,UAAnD,4B,GA1CD9D,IAAMoF,eAiDVC,iBAAa5B,IAEtBc,GAAOjF,IAAOyE,KAAV,MAIJY,GAAgBrF,IAAOiE,GAAV,MAMb2B,GAAkB5F,IAAOgB,IAAV,MAKf0E,GAAY1F,YAAO4D,GAAP5D,CAAH,MAITyF,GAAgBzF,IAAOgB,IAAV,MAKb2E,GAAU3F,IAAOqB,IAAV,MChIE2E,G,iLCQP,OACI,oCACI,kBAAC,GAAD,W,GAJGtF,IAAMoF,eCOVG,OATf,WACE,OACE,oCACE,kBAAC,EAAD,MACA,kBAAC,GAAD,QCEcC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAO,kBAAC,GAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,MAAK,SAAAC,GACjCA,EAAaC,iB","file":"static/js/main.0eed454e.chunk.js","sourcesContent":["import * as React from 'react';\r\nimport styled from 'styled-components';\r\n\r\n\r\nfunction Navbar() {\r\n    return(\r\n        <Header>\r\n            <Logo href=\"www\">購物</Logo>\r\n        </Header>\r\n    )\r\n}\r\n\r\nexport default Navbar;\r\n\r\nconst Header = styled.header`\r\n    padding: 20px;\r\n`;\r\n\r\nconst Logo = styled.a`\r\n    background-image: url('assets/img/logo.svg');\r\n    background-size: cover;\r\n    width: 200px;\r\n    height: 40px;\r\n    display: inline-block;\r\n    text-indent: 101%;\r\n    white-space: nowrap;\r\n    overflow: hidden;\r\n`;","import Navbar from './Navbar';\r\n\r\nexport default Navbar;\r\n","import * as React from 'react';\r\nimport styled from 'styled-components';\r\n\r\ntype Props = {\r\n    style?: React.CSSProperties,\r\n    className?: string,\r\n    children?: React.Node\r\n};\r\n\r\ntype State = {};\r\n\r\nclass Title extends React.PureComponent<Props, State> {\r\n    render() {\r\n        const {style, className, children} = this.props\r\n        \r\n        return(\r\n            <TitleRoot style={style} className={className}>{children}</TitleRoot>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Title;\r\n\r\nconst TitleRoot = styled.h2`\r\n    font-size: 15px;\r\n    margin-bottom: 3px;\r\n    color: #606266;\r\n`;","import Title from './Title';\r\n\r\nexport default Title;\r\n","import * as React from 'react';\r\nimport styled, {css} from 'styled-components';\r\n\r\ntype Props = {\r\n    isCurrent?: boolean,\r\n};\r\n\r\ntype State = {};\r\n\r\nclass Radio extends React.PureComponent<Props, State> {\r\n    static defaultProps = {\r\n        isCurrent: false\r\n    };\r\n\r\n    render() {\r\n        const {isCurrent} = this.props\r\n\r\n        return(\r\n            <RadioRoot isCurrent={isCurrent}/>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Radio;\r\n\r\nconst RadioRoot = styled.div`\r\n    min-width: 24px;\r\n    max-width: 24px;\r\n    height: 24px;\r\n    border: ${props => props.isCurrent ? '1px solid #4BC9C9' : '1px solid #DCDFE6'};\r\n    border-radius: 50%;\r\n    position: relative;\r\n\r\n    ${props => props.isCurrent && css`\r\n        background-color: #4BC9C9;\r\n        &:after{\r\n            content: '✔';\r\n            position: absolute;\r\n            color: #fff;\r\n            left: 50%;\r\n            top: 50%;\r\n            transform: translate(-50%, -50%);\r\n        }\r\n    `}\r\n`;","import Radio from './Radio';\r\n\r\nexport default Radio;\r\n","import * as React from 'react';\r\nimport styled, {css} from 'styled-components'\r\n\r\nimport Title from '../../atoms/Title'\r\nimport Radio from '../../atoms/Radio'\r\n\r\nconst CartArray = [\r\n    {\r\n        id: 1,\r\n        img: 'assets/img/icon_store.svg',\r\n        title: '超商取貨 付款',\r\n        content: '24隔日取貨說明'\r\n    }\r\n]\r\n\r\ntype Props = {\r\n    source?: array,\r\n    isCurrent?: boolean,\r\n    yourRadio: string,\r\n    className?: string\r\n};\r\n\r\ntype State = {\r\n    \r\n};\r\n\r\nclass Card extends React.Component<Props, State> {\r\n    static defaultProps = {\r\n        source: CartArray,\r\n        isCurrent: false,\r\n        className: undefined\r\n    };\r\n\r\n    render() {\r\n        const {source, img, onChange, yourRadio, className} = this.props;\r\n        return(\r\n            <>\r\n                {source.map((row, index) => {\r\n                    const isCurrent = parseFloat(yourRadio) === parseFloat(row.id)\r\n                    return (\r\n                        <CardRoot key={row.id} className={className}>\r\n                            <CardLabel isCurrent={isCurrent}>\r\n                                <CardInput type=\"radio\" name=\"card\" value={row.id} onChange={onChange}/>\r\n                                <Radio isCurrent={isCurrent}/>\r\n                                <CardImg>\r\n                                    <img src={row.img} alt=\"\"/>\r\n                                </CardImg>\r\n                                <CardText>\r\n                                    <Title>{row.title}</Title>\r\n                                    <CardContent>{row.content}</CardContent>\r\n                                </CardText>\r\n                            </CardLabel>\r\n                        </CardRoot>\r\n                    )\r\n                })}\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Card;\r\n\r\nconst CardRoot = styled.li`\r\n    margin: 10px 25px;\r\n    width: calc(50% - 50px);\r\n    position: relative;\r\n    display: flex;\r\n    align-items: center;\r\n`;\r\n\r\nconst CardLabel = styled.label`\r\n    display: flex;\r\n    align-items: center;\r\n    min-height: 120px;\r\n    padding: 20px 20px 20px 35px;\r\n    width: 100%;\r\n    border: ${props => props.isCurrent ? '1px solid #4BC9C9' :  '1px solid #DCDFE6'};\r\n    border-radius: 4px;\r\n\r\n    ${props => props.isCurrent && css`\r\n        background-color: #F5F7FA\r\n    `}\r\n`;\r\n\r\nconst CardInput = styled.input`\r\n    display: none;\r\n`;\r\n\r\nconst CardContent = styled.p`\r\n    font-size: 15px;\r\n    color: #909399;\r\n`;\r\n\r\nconst CardImg = styled.div`\r\n    max-width: 70px;\r\n    margin: 0 30px;\r\n`;\r\n\r\nconst CardText = styled.div`\r\n    max-width: 195px;\r\n`;","import Card from './Card';\r\n\r\nexport default Card;\r\n","import * as React from 'react';\r\nimport styled from 'styled-components';\r\n\r\ntype Props = {\r\n    style?: React.CSSProperties,\r\n    className?: string,\r\n    children?: React.Node,\r\n    theme?: 'default' | 'primary',\r\n    type?: 'button' | 'submit'\r\n};\r\n\r\ntype State = {};\r\n\r\nconst themeConfig = {\r\n    default: {\r\n        bgColor: 'transparent',\r\n        fontColor: '#5A5E66',\r\n        borderColor: '#DCDFE6'\r\n    },\r\n    primary: {\r\n        bgColor: '#4BC9C9',\r\n        fontColor: '#FFFFFF',\r\n        borderColor: '#4BC9C9'\r\n    }\r\n};\r\n\r\nclass Button extends React.PureComponent<Props, State> {\r\n    static defaultProps = {\r\n        theme: 'default',\r\n        type: 'button'\r\n    };\r\n\r\n    render() {\r\n        const {style, className, children, theme, ...buttonProps} = this.props\r\n\r\n        const themeProps = theme ? themeConfig[theme] : {};\r\n\r\n        return(\r\n            <ButtonRoot {...buttonProps} style={style} className={className} config={{...themeProps}}>{children}</ButtonRoot>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Button;\r\n\r\nconst ButtonRoot = styled.button`\r\n    border: 1px solid ${props => props.config.borderColor && props.config.borderColor};\r\n    border-radius: 4px;\r\n    min-width: 155px;\r\n    min-height: 55px;\r\n    background-color: ${props => props.config.bgColor && props.config.bgColor};\r\n    color: ${props => props.config.fontColor && props.config.fontColor};\r\n    cursor: pointer;\r\n    font-family: Arial, Helvetica, '微軟正黑體', sans-serif;\r\n    font-size: 20px;\r\n\r\n    &:not(:last-of-type){\r\n        margin-right: 20px;\r\n    }\r\n`;","import Button from './Button';\r\n\r\nexport default Button;\r\n","import * as React from 'react';\r\nimport styled from 'styled-components';\r\nimport ReactHtmlParser from 'react-html-parser';\r\n\r\ntype Props = {\r\n    ListContent?: html,\r\n    className?: string\r\n};\r\n\r\ntype State = {};\r\n\r\nfunction List(props: Props, state: State) {\r\n    const {ListContent, className} = props\r\n    return(\r\n        <ListRoot className={className}>\r\n            {ReactHtmlParser(ListContent)}\r\n        </ListRoot>\r\n    )\r\n}\r\n\r\nList.defaultProps = {\r\n    ListContent: undefined,\r\n    className: undefined\r\n}\r\n\r\nexport default List;\r\n\r\nconst ListRoot = styled.ul`\r\n    font-size: 12px;\r\n    color: #909399;\r\n    letter-spacing: 1.2px;\r\n    line-height: 1.5;\r\n\r\n    a{\r\n        color: #4BC9C9;\r\n    }\r\n`;","import List from './List';\r\n\r\nexport default List;\r\n","import React from 'react';\r\nimport styled from 'styled-components'\r\nimport { createForm, formShape } from 'rc-form';\r\nimport Card from '../../stories/organisms/Card';\r\nimport Button from '../../stories/atoms/Button';\r\nimport List from '../../stories/atoms/List';\r\n\r\nconst CartArray = [\r\n    {\r\n        id: 1,\r\n        img: 'assets/img/icon_store.svg',\r\n        title: '超商取貨 付款',\r\n        content: '24隔日取貨說明'\r\n    },\r\n    {\r\n        id: 2,\r\n        img: 'assets/img/icon_card.svg',\r\n        title: '信用卡 付款',\r\n        content: 'VISA, Master, JCB, 聯合信用卡'\r\n    },\r\n    {\r\n        id: 3,\r\n        img: 'assets/img/line_pay.svg',\r\n        title: 'LINE Pay 付款',\r\n        content: '使用line point折抵消費'\r\n    },\r\n    {\r\n        id: 4,\r\n        img: 'assets/img/unionpay.png',\r\n        title: '銀聯卡 付款',\r\n        content: '支付成功頁面僅為銀聯卡回覆訊息，交易是否完成請需以本商店通知為準'\r\n    },\r\n    {\r\n        id: 5,\r\n        img: 'assets/img/icon_atm.svg',\r\n        title: 'Web ATM 付款',\r\n        content: '網路銀行ATM操作說明'\r\n    }\r\n]\r\n\r\nconst ListContent = `<li>・請確認您填寫的資料是否正確，一旦訂單完成後，付款與物流方式皆無法修改。</li>\r\n<li>・使用ATM轉帳，將依據銀行入帳日，依序進行出貨/排貨。</li>\r\n<li>・每筆訂單所提供的「ATM專屬虛擬帳號」皆不同，若您欲使用本項服務，敬請放心進行匯款作業，安全又便利！</li>\r\n<li>・若訂單內含預購、無庫存商品調貨時間請參考「商品平均調貨時間」。</li>\r\n<li>・若您對取貨或付款的方式有疑問，請詳閱<a href=\"www\">「購買說明」</a>。</li>\r\n<li style=\"color: #000000\">・請確認您已詳閱並瞭解本站<a href=\"www\">「購買說明」</a>內容，訂單完成即表示您已同意其中的各項說明。</li>`\r\n\r\ntype Props = {\r\n    form: formShape\r\n};\r\n\r\ntype State = {\r\n    yourRadio: string\r\n};\r\n\r\nclass Form extends React.PureComponent<Props, State> {\r\n    state = {\r\n        yourRadio: ''\r\n    }\r\n\r\n    handleRadio = (e) => {\r\n        this.setState({\r\n            yourRadio: e.target.value\r\n        })\r\n    }\r\n\r\n    onSubmit = (e) => {\r\n        // e.preventDefault();\r\n        this.props.form.validateFields((error, value) => {\r\n        console.log(error, value);\r\n        });\r\n    }\r\n\r\n    render() {\r\n        const {\r\n            form: {getFieldDecorator, getFieldValue, setFieldsValue}\r\n            } = this.props;\r\n        \r\n        const {yourRadio} = this.state;\r\n        return(\r\n            <Main action=\"\" style={{maxWidth: '825px', width: '95%'}}>\r\n                <CardContainer>\r\n                    {getFieldDecorator('depositBankId', {\r\n                            validateFirst: true,\r\n                            rules: [{\r\n                                required: true\r\n                            }]\r\n                        })(\r\n                            <Card source={CartArray} onChange={this.handleRadio} yourRadio={yourRadio}/>\r\n                        )}\r\n                </CardContainer>\r\n                <ListContainer>\r\n                    <ListBlack ListContent={ListContent}/>\r\n                    <ListImg src=\"assets/img/icon_notice.svg\" alt=\"\"/>\r\n                </ListContainer>\r\n                <ButtonContainer>\r\n                    <Button>上一步</Button>\r\n                    <Button theme=\"primary\" type=\"reset\" onClick={this.onSubmit}>下一步</Button>\r\n                </ButtonContainer>\r\n            </Main>\r\n        )\r\n    }\r\n};\r\n\r\nexport default createForm()(Form);\r\n\r\nconst Main = styled.form`\r\n    margin: 55px auto 30px;\r\n`;\r\n\r\nconst CardContainer = styled.ul`\r\n    display: flex;\r\n    flex-wrap: wrap;\r\n    margin: 0 -25px 40px -25px;\r\n`;\r\n\r\nconst ButtonContainer = styled.div`\r\n    display: flex;\r\n    justify-content: flex-end;\r\n`;\r\n\r\nconst ListBlack = styled(List)`\r\n    margin: 40px 0 15px;\r\n`;\r\n\r\nconst ListContainer = styled.div`\r\n    position: relative;\r\n    margin-bottom: 60px;\r\n`;\r\n\r\nconst ListImg = styled.img`\r\n    position: absolute;\r\n    right: 0;\r\n    top: 0;\r\n    z-index: -1;\r\n`;","import Home from './Home'\r\n\r\nexport default Home","import React from 'react';\r\n\r\nimport Form from './Form'\r\n\r\ntype Props = {};\r\n\r\ntype State = {};\r\n\r\nclass Home extends React.PureComponent<Props, State> {\r\n    render() {\r\n        return(\r\n            <>\r\n                <Form/>\r\n            </>\r\n        )\r\n    }\r\n};\r\n\r\nexport default Home;","import React from 'react';\nimport './reset.css';\n\nimport Navbar from './stories/atoms/Navbar'\nimport Home from './page/Home'\n\nfunction App() {\n  return (\n    <>\n      <Navbar/>\n      <Home/>\n    </>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}