{"version":3,"sources":["stories/atoms/Navbar/Navbar.js","stories/atoms/Navbar/index.js","stories/atoms/Steps/Steps.js","stories/atoms/Steps/index.js","stories/organisms/Info/Info.js","stories/organisms/Info/index.js","stories/atoms/Title/Title.js","stories/atoms/Title/index.js","stories/atoms/Radio/Radio.js","stories/atoms/Radio/index.js","stories/organisms/Card/Card.js","stories/organisms/Card/index.js","stories/atoms/Button/Button.js","stories/atoms/Button/index.js","stories/atoms/List/List.js","stories/atoms/List/index.js","page/Home/Form.js","page/Home/Home.js","page/Home/index.js","App.js","serviceWorker.js","index.js"],"names":["Navbar","Header","Logo","href","styled","header","a","Steps","this","props","className","totalStep","activeStep","stepName","otherProps","stepDom","stepNumber","push","Step","active","key","Arrow","StepText","StepNumber","number","data-number","StepsRoot","React","defaultProps","style","ul","div","css","span","li","Message","title","coin","Info","InfoBg","InfoContainer","InfoTitleRoot","InfoTitle","InfoId","InfoMessage","map","row","index","InfoMessageList","InfoMessageListTitle","InfoMessageListCoin","article","h2","p","Title","children","TitleRoot","Radio","isCurrent","RadioRoot","Card","source","onChange","img","yourRadio","parseFloat","id","CardRoot","CardLabel","CardInput","type","name","value","CardImg","src","alt","CardText","CardContent","content","undefined","label","input","themeConfig","default","bgColor","fontColor","borderColor","primary","Button","theme","buttonProps","themeProps","ButtonRoot","config","button","List","state","ListContent","ListRoot","ReactHtmlParser","CartArray","Form","handleRadio","e","setState","target","onSubmit","onClick","preventDefault","form","validateFields","error","console","log","alert","getFieldDecorator","getFieldValue","setFieldsValue","Main","action","maxWidth","width","CardContainer","validateFirst","rules","required","ListContainer","ListBlack","ListImg","ButtonContainer","PureComponent","createForm","Home","handleStep","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.13b9958f.chunk.js","sourcesContent":["import * as React from 'react';\r\nimport styled from 'styled-components';\r\n\r\n\r\nfunction Navbar() {\r\n    return(\r\n        <Header>\r\n            <Logo href=\"www\">購物</Logo>\r\n        </Header>\r\n    )\r\n}\r\n\r\nexport default Navbar;\r\n\r\nconst Header = styled.header`\r\n    padding: 20px;\r\n`;\r\n\r\nconst Logo = styled.a`\r\n    background-image: url('assets/img/logo.svg');\r\n    background-size: cover;\r\n    width: 200px;\r\n    height: 40px;\r\n    display: inline-block;\r\n    text-indent: 101%;\r\n    white-space: nowrap;\r\n    overflow: hidden;\r\n`;","import Navbar from './Navbar';\r\n\r\nexport default Navbar;\r\n","// @flow\n/**\n * Steps\n */\nimport * as React from 'react';\nimport styled, {css} from 'styled-components';\n\n\ntype Props = {\n    style?: React.CSSProperties,\n    className?: string,\n    activeStep?: number,\n    totalStep?: number,\n    stepName?: array\n};\ntype State = {};\n\nclass Steps extends React.PureComponent<Props, State> {\n    static defaultProps = {\n        style: null,\n        className: null,\n        activeStep: 1,\n        totalStep: 3,\n        stepName: ['','','']\n    };\n\n    render() {\n        const {className, totalStep, activeStep, stepName, ...otherProps} = this.props;\n\n        const stepDom = [];\n        for (let stepNumber = 1; stepNumber <= totalStep; stepNumber += 1) {\n            stepDom.push(\n                <Step active={activeStep >= stepNumber} key={`stepNumber-${stepNumber}`}>\n                    <Arrow />\n                    <StepText active={activeStep >= stepNumber}>\n                        <StepNumber active={activeStep >= stepNumber} number={stepNumber} data-number={stepNumber}></StepNumber>\n                        {stepName[stepNumber - 1]}\n                    </StepText>\n                </Step>\n            );\n        }\n\n        return <StepsRoot className={className} {...otherProps}>{stepDom}</StepsRoot>;\n    }\n}\n\nexport default Steps;\n\nconst StepsRoot = styled.ul`\n    padding: 16px 0;\n    background-color: #F5F7FA;\n    border-radius: 4px;\n    display: flex;\n    max-width: 810px;\n    margin: 0 auto;\n`;\n\nconst Arrow = styled.div`\n\n`;\n\nconst StepText = styled.div`\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    color: #909399\n    ${props => props.active && css`\n        color: #4BC9C9 !important;\n    `};\n`;\n\nconst StepNumber = styled.span`\n    display: inline-block;\n    width: 24px;\n    height: 24px;\n    margin-right: 10px;\n    border-radius: 50%;\n    border: 1.5px solid #909399;\n    position: relative;\n    ${props => props.active && css`\n        border: 1.5px solid #4BC9C9 !important;\n    `};\n\n    ${props => props.active && css`\n        &:after{\n            content: '✔';\n            position: absolute;\n            color: #4BC9C9 !important;\n            left: 50%;\n            top: 50%;\n            transform: translate(-50%, -50%);\n        }\n    `};\n\n    ${props => !props.active && css`\n        ${props => props.number && css`\n            &:after{\n                content: attr(data-number);\n                position: absolute;\n                color: #909399;\n                left: 50%;\n                top: 50%;\n                transform: translate(-50%, -50%);\n            }\n        `}\n    `}\n`;\n\nconst Step = styled.li`\n    width: calc(100%/3);\n    position: relative;\n\n    &:not(:last-of-type){\n        ${Arrow} {\n            position: absolute;\n            width: 15px;\n            height: 15px;\n            border-top: 1px solid #C0C4CC;\n            border-right: 1px solid #C0C4CC;\n            right: 0;\n            top: 50%;\n            transform: translateY(-50%) rotate(45deg);\n        }\n    }\n\n    ${props => props.active && css`\n        & + ${Step} {\n            ${StepText} {\n                color: #303133;\n            }\n            ${StepNumber} {\n                border-color: #303133;\n                &:after{\n                    color: #303133;\n                }\n            }\n        }\n    `}\n`;","import Steps from './Steps';\n\nexport default Steps;\n","import * as React from 'react';\r\nimport styled from 'styled-components'\r\n\r\nconst Message = [\r\n    {\r\n        title: '商品小計',\r\n        coin: 880\r\n    },\r\n    {\r\n        title: '運費',\r\n        coin: 60\r\n    },\r\n    {\r\n        title: '總金額',\r\n        coin: 940\r\n    }\r\n]\r\n\r\ntype Props = {\r\n    Message?: object;\r\n};\r\n\r\ntype State = {};\r\n\r\nclass Info extends React.Component<Props, State> {\r\n    static defaultProps = {\r\n        Message: {}\r\n    };\r\n\r\n    render() {\r\n        return(\r\n            <InfoBg>\r\n                <InfoContainer>\r\n                    <InfoTitleRoot>\r\n                        <InfoTitle>訂單明細</InfoTitle>\r\n                        <InfoId>(JC293016)</InfoId>\r\n                    </InfoTitleRoot>\r\n                    <InfoMessage>\r\n                        {\r\n                            Message.map((row,index) => (\r\n                                <InfoMessageList key={row.title}>\r\n                                    <InfoMessageListTitle>{row.title}</InfoMessageListTitle>\r\n                                    <InfoMessageListCoin>NT$ {row.coin}</InfoMessageListCoin>\r\n                                </InfoMessageList>\r\n                            ))\r\n                        }\r\n                    </InfoMessage>\r\n                </InfoContainer>\r\n            </InfoBg>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Info;\r\n\r\nconst InfoBg = styled.article`\r\n    min-height: 130px;\r\n    padding-top: 20px;\r\n    background-image: linear-gradient(to right, #8BC1EF, #82D6D6);\r\n    display: flex;\r\n    align-items: center;\r\n    border-radius: 4px;\r\n`;\r\n\r\nconst InfoContainer = styled.div`\r\n    max-width: 870px;\r\n    width: calc(100% - 30px);\r\n    margin: 0 auto;\r\n    display: flex;\r\n    align-items: center;\r\n`;\r\n\r\nconst InfoTitleRoot = styled.div`\r\n    color: #fff;\r\n    padding-left: 20px;\r\n    border-left: 2px solid #fff;\r\n`;\r\n\r\nconst InfoTitle = styled.h2`\r\n    font-size: 36px;\r\n    margin-bottom: 3px;\r\n`;\r\n\r\nconst InfoId = styled.p`\r\n    font-size: 15;\r\n`;\r\n\r\nconst InfoMessage = styled.ul`\r\n    margin-left: auto;\r\n    color: #fff;\r\n    font-size: 15px;\r\n    display: flex;\r\n    align-items: flex-end;\r\n    margin-bottom: 10px;\r\n`;\r\n\r\nconst InfoMessageList = styled.li`\r\n    display: flex;\r\n    align-items: flex-end;\r\n\r\n    &:not(:last-of-type) {\r\n        margin-right: 50px;\r\n    }\r\n\r\n    &:last-of-type {\r\n        margin-left: 10px;\r\n        p:last-of-type {\r\n            font-size: 24px;\r\n            margin-left: 5px;\r\n        }\r\n    }\r\n`;\r\n\r\nconst InfoMessageListTitle = styled.p`\r\n    margin-right: 10px;\r\n`;\r\n\r\nconst InfoMessageListCoin = styled.p`\r\n\r\n`;","import Info from './Info';\r\n\r\nexport default Info;\r\n","import * as React from 'react';\r\nimport styled from 'styled-components';\r\n\r\ntype Props = {\r\n    style?: React.CSSProperties,\r\n    className?: string,\r\n    children?: React.Node\r\n};\r\n\r\ntype State = {};\r\n\r\nclass Title extends React.PureComponent<Props, State> {\r\n    render() {\r\n        const {style, className, children} = this.props\r\n        \r\n        return(\r\n            <TitleRoot style={style} className={className}>{children}</TitleRoot>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Title;\r\n\r\nconst TitleRoot = styled.h2`\r\n    font-size: 15px;\r\n    margin-bottom: 3px;\r\n    color: #606266;\r\n`;","import Title from './Title';\r\n\r\nexport default Title;\r\n","import * as React from 'react';\r\nimport styled, {css} from 'styled-components';\r\n\r\ntype Props = {\r\n    isCurrent?: boolean,\r\n};\r\n\r\ntype State = {};\r\n\r\nclass Radio extends React.PureComponent<Props, State> {\r\n    static defaultProps = {\r\n        isCurrent: false\r\n    };\r\n\r\n    render() {\r\n        const {isCurrent} = this.props\r\n\r\n        return(\r\n            <RadioRoot isCurrent={isCurrent}/>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Radio;\r\n\r\nconst RadioRoot = styled.div`\r\n    min-width: 24px;\r\n    max-width: 24px;\r\n    height: 24px;\r\n    border: ${props => props.isCurrent ? '1px solid #4BC9C9' : '1px solid #DCDFE6'};\r\n    border-radius: 50%;\r\n    position: relative;\r\n\r\n    ${props => props.isCurrent && css`\r\n        background-color: #4BC9C9;\r\n        &:after{\r\n            content: '✔';\r\n            position: absolute;\r\n            color: #fff;\r\n            left: 50%;\r\n            top: 50%;\r\n            transform: translate(-50%, -50%);\r\n        }\r\n    `}\r\n`;","import Radio from './Radio';\r\n\r\nexport default Radio;\r\n","import * as React from 'react';\r\nimport styled, {css} from 'styled-components'\r\n\r\nimport Title from '../../atoms/Title'\r\nimport Radio from '../../atoms/Radio'\r\n\r\nconst CartArray = [\r\n    {\r\n        id: 1,\r\n        img: 'assets/img/icon_store.svg',\r\n        title: '超商取貨 付款',\r\n        content: '24隔日取貨說明'\r\n    }\r\n]\r\n\r\ntype Props = {\r\n    source?: array,\r\n    isCurrent?: boolean,\r\n    yourRadio: string,\r\n    className?: string\r\n};\r\n\r\ntype State = {\r\n    \r\n};\r\n\r\nclass Card extends React.Component<Props, State> {\r\n    static defaultProps = {\r\n        source: CartArray,\r\n        isCurrent: false,\r\n        className: undefined\r\n    };\r\n\r\n    render() {\r\n        const {source, img, onChange, yourRadio, className} = this.props;\r\n        return(\r\n            <>\r\n                {source.map((row, index) => {\r\n                    const isCurrent = parseFloat(yourRadio) === parseFloat(row.id)\r\n                    return (\r\n                        <CardRoot key={row.id} className={className}>\r\n                            <CardLabel isCurrent={isCurrent}>\r\n                                <CardInput type=\"radio\" name=\"card\" value={row.id} onChange={onChange}/>\r\n                                <Radio isCurrent={isCurrent}/>\r\n                                <CardImg>\r\n                                    <img src={row.img} alt=\"\"/>\r\n                                </CardImg>\r\n                                <CardText>\r\n                                    <Title>{row.title}</Title>\r\n                                    <CardContent>{row.content}</CardContent>\r\n                                </CardText>\r\n                            </CardLabel>\r\n                        </CardRoot>\r\n                    )\r\n                })}\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Card;\r\n\r\nconst CardRoot = styled.li`\r\n    margin: 10px 25px;\r\n    width: calc(50% - 50px);\r\n    position: relative;\r\n    display: flex;\r\n    align-items: center;\r\n`;\r\n\r\nconst CardLabel = styled.label`\r\n    display: flex;\r\n    align-items: center;\r\n    min-height: 120px;\r\n    padding: 20px 20px 20px 35px;\r\n    width: 100%;\r\n    border: ${props => props.isCurrent ? '1px solid #4BC9C9' :  '1px solid #DCDFE6'};\r\n    border-radius: 4px;\r\n\r\n    ${props => props.isCurrent && css`\r\n        background-color: #F5F7FA\r\n    `}\r\n`;\r\n\r\nconst CardInput = styled.input`\r\n    display: none;\r\n`;\r\n\r\nconst CardContent = styled.p`\r\n    font-size: 15px;\r\n    color: #909399;\r\n`;\r\n\r\nconst CardImg = styled.div`\r\n    max-width: 70px;\r\n    margin: 0 30px;\r\n`;\r\n\r\nconst CardText = styled.div`\r\n    max-width: 195px;\r\n`;","import Card from './Card';\r\n\r\nexport default Card;\r\n","import * as React from 'react';\r\nimport styled from 'styled-components';\r\n\r\ntype Props = {\r\n    style?: React.CSSProperties,\r\n    className?: string,\r\n    children?: React.Node,\r\n    theme?: 'default' | 'primary',\r\n    type?: 'button' | 'submit'\r\n};\r\n\r\ntype State = {};\r\n\r\nconst themeConfig = {\r\n    default: {\r\n        bgColor: 'transparent',\r\n        fontColor: '#5A5E66',\r\n        borderColor: '#DCDFE6'\r\n    },\r\n    primary: {\r\n        bgColor: '#4BC9C9',\r\n        fontColor: '#FFFFFF',\r\n        borderColor: '#4BC9C9'\r\n    }\r\n};\r\n\r\nclass Button extends React.PureComponent<Props, State> {\r\n    static defaultProps = {\r\n        theme: 'default',\r\n        type: 'button'\r\n    };\r\n\r\n    render() {\r\n        const {style, className, children, theme, ...buttonProps} = this.props\r\n\r\n        const themeProps = theme ? themeConfig[theme] : {};\r\n\r\n        return(\r\n            <ButtonRoot {...buttonProps} style={style} className={className} config={{...themeProps}}>{children}</ButtonRoot>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Button;\r\n\r\nconst ButtonRoot = styled.button`\r\n    border: 1px solid ${props => props.config.borderColor && props.config.borderColor};\r\n    border-radius: 4px;\r\n    min-width: 155px;\r\n    min-height: 55px;\r\n    background-color: ${props => props.config.bgColor && props.config.bgColor};\r\n    color: ${props => props.config.fontColor && props.config.fontColor};\r\n    cursor: pointer;\r\n    font-family: Arial, Helvetica, '微軟正黑體', sans-serif;\r\n    font-size: 20px;\r\n\r\n    &:not(:last-of-type){\r\n        margin-right: 20px;\r\n    }\r\n`;","import Button from './Button';\r\n\r\nexport default Button;\r\n","import * as React from 'react';\r\nimport styled from 'styled-components';\r\nimport ReactHtmlParser from 'react-html-parser';\r\n\r\ntype Props = {\r\n    ListContent?: html,\r\n    className?: string\r\n};\r\n\r\ntype State = {};\r\n\r\nfunction List(props: Props, state: State) {\r\n    const {ListContent, className} = props\r\n    return(\r\n        <ListRoot className={className}>\r\n            {ReactHtmlParser(ListContent)}\r\n        </ListRoot>\r\n    )\r\n}\r\n\r\nList.defaultProps = {\r\n    ListContent: undefined,\r\n    className: undefined\r\n}\r\n\r\nexport default List;\r\n\r\nconst ListRoot = styled.ul`\r\n    font-size: 12px;\r\n    color: #909399;\r\n    letter-spacing: 1.2px;\r\n    line-height: 1.5;\r\n\r\n    a{\r\n        color: #4BC9C9;\r\n    }\r\n`;","import List from './List';\r\n\r\nexport default List;\r\n","import React from 'react';\r\nimport styled from 'styled-components'\r\nimport { createForm, formShape } from 'rc-form';\r\nimport Card from '../../stories/organisms/Card';\r\nimport Button from '../../stories/atoms/Button';\r\nimport List from '../../stories/atoms/List';\r\n\r\nconst CartArray = [\r\n    {\r\n        id: 1,\r\n        img: 'assets/img/icon_store.svg',\r\n        title: '超商取貨 付款',\r\n        content: '24隔日取貨說明'\r\n    },\r\n    {\r\n        id: 2,\r\n        img: 'assets/img/icon_card.svg',\r\n        title: '信用卡 付款',\r\n        content: 'VISA, Master, JCB, 聯合信用卡'\r\n    },\r\n    {\r\n        id: 3,\r\n        img: 'assets/img/line_pay.svg',\r\n        title: 'LINE Pay 付款',\r\n        content: '使用line point折抵消費'\r\n    },\r\n    {\r\n        id: 4,\r\n        img: 'assets/img/unionpay.png',\r\n        title: '銀聯卡 付款',\r\n        content: '支付成功頁面僅為銀聯卡回覆訊息，交易是否完成請需以本商店通知為準'\r\n    },\r\n    {\r\n        id: 5,\r\n        img: 'assets/img/icon_atm.svg',\r\n        title: 'Web ATM 付款',\r\n        content: '網路銀行ATM操作說明'\r\n    }\r\n]\r\n\r\nconst ListContent = `<li>・請確認您填寫的資料是否正確，一旦訂單完成後，付款與物流方式皆無法修改。</li>\r\n<li>・使用ATM轉帳，將依據銀行入帳日，依序進行出貨/排貨。</li>\r\n<li>・每筆訂單所提供的「ATM專屬虛擬帳號」皆不同，若您欲使用本項服務，敬請放心進行匯款作業，安全又便利！</li>\r\n<li>・若訂單內含預購、無庫存商品調貨時間請參考「商品平均調貨時間」。</li>\r\n<li>・若您對取貨或付款的方式有疑問，請詳閱<a href=\"www\">「購買說明」</a>。</li>\r\n<li style=\"color: #000000\">・請確認您已詳閱並瞭解本站<a href=\"www\">「購買說明」</a>內容，訂單完成即表示您已同意其中的各項說明。</li>`\r\n\r\ntype Props = {\r\n    form: formShape,\r\n    onClick: any\r\n};\r\n\r\ntype State = {\r\n    yourRadio: string\r\n};\r\n\r\nclass Form extends React.PureComponent<Props, State> {\r\n    state = {\r\n        yourRadio: ''\r\n    }\r\n\r\n    handleRadio = (e) => {\r\n        this.setState({\r\n            yourRadio: e.target.value\r\n        })\r\n    }\r\n\r\n    onSubmit = (e) => {\r\n        const {onClick} = this.props;\r\n        e.preventDefault();\r\n        this.props.form.validateFields((error, value) => {\r\n            \r\n            console.log(error, value);\r\n            if (!error) {\r\n                onClick();\r\n            } else {\r\n                alert('請選擇付款方式');\r\n            }\r\n        });\r\n    }\r\n\r\n    render() {\r\n        const {\r\n            form: {getFieldDecorator, getFieldValue, setFieldsValue}\r\n            } = this.props;\r\n        \r\n        const {yourRadio} = this.state;\r\n        return(\r\n            <Main action=\"\" style={{maxWidth: '825px', width: '95%'}} onSubmit={this.onSubmit}>\r\n                <CardContainer>\r\n                    {getFieldDecorator('depositBankId', {\r\n                            validateFirst: true,\r\n                            rules: [{\r\n                                required: true\r\n                            }]\r\n                        })(\r\n                            <Card source={CartArray} onChange={this.handleRadio} yourRadio={yourRadio}/>\r\n                        )}\r\n                </CardContainer>\r\n                <ListContainer>\r\n                    <ListBlack ListContent={ListContent}/>\r\n                    <ListImg src=\"assets/img/icon_notice.svg\" alt=\"\"/>\r\n                </ListContainer>\r\n                <ButtonContainer>\r\n                    <Button>上一步</Button>\r\n                    <Button theme=\"primary\" type=\"onSubmit\">下一步</Button>\r\n                </ButtonContainer>\r\n            </Main>\r\n        )\r\n    }\r\n};\r\n\r\nexport default createForm()(Form);\r\n\r\nconst Main = styled.form`\r\n    margin: 55px auto 30px;\r\n`;\r\n\r\nconst CardContainer = styled.ul`\r\n    display: flex;\r\n    flex-wrap: wrap;\r\n    margin: 0 -25px 40px -25px;\r\n`;\r\n\r\nconst ButtonContainer = styled.div`\r\n    display: flex;\r\n    justify-content: flex-end;\r\n`;\r\n\r\nconst ListBlack = styled(List)`\r\n    margin: 40px 0 15px;\r\n`;\r\n\r\nconst ListContainer = styled.div`\r\n    position: relative;\r\n    margin-bottom: 60px;\r\n`;\r\n\r\nconst ListImg = styled.img`\r\n    position: absolute;\r\n    right: 0;\r\n    top: 0;\r\n    z-index: -1;\r\n`;","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nimport Steps from '../../stories/atoms/Steps';\r\nimport Info from '../../stories/organisms/Info';\r\nimport Form from './Form';\r\n\r\nconst stepName = ['確認購物車', '選擇配送付款方式', '確認訂購']\r\n\r\ntype Props = {};\r\n\r\ntype State = {\r\n    activeStep: number\r\n};\r\n\r\nclass Home extends React.PureComponent<Props, State> {\r\n    state = {\r\n        activeStep: 1\r\n    }\r\n\r\n    handleStep = () => {\r\n        const {activeStep} = this.state\r\n\r\n        this.setState({\r\n            activeStep: activeStep + 1\r\n        })\r\n    }\r\n\r\n    render() {\r\n        const {activeStep} = this.state\r\n\r\n        return(\r\n            <>\r\n                <StepsRoot activeStep={activeStep} stepName={stepName}/>\r\n                <Info/>\r\n                <Form onClick={this.handleStep}/>\r\n            </>\r\n        )\r\n    }\r\n};\r\n\r\nexport default Home;\r\n\r\nconst StepsRoot = styled(Steps)`\r\n    margin-bottom: -20px;\r\n    position: relative;\r\n`;","import Home from './Home'\r\n\r\nexport default Home","import React from 'react';\nimport './reset.css';\n\nimport Navbar from './stories/atoms/Navbar'\nimport Home from './page/Home'\n\nfunction App() {\n  return (\n    <>\n      <Navbar/>\n      <Home/>\n    </>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}